vision <- read_xlsx('text.xlsx', sheet = 'Vision')
library(reshape2)
library(readxl)
library(dplyr)
library(plotly)
library(DT)
vision <- read_xlsx('text.xlsx', sheet = 'Vision')
vision <- melt(vision,id.vars = c('Q1: Affiliation','Category','Q7: Vision relevant',
'Q11: Vision'))
vision <- vision[complete.cases(mission),]
vision <- vision[complete.cases(vision),]
View(vision)
values <- read_xlsx('text.xlsx', sheet = 'Values')
values <- melt(values,id.vars = c('Q1: Affiliation','Category','Q10: Relavant',
'Q8: Values'))
View(values)
values <- values[complete.cases(values),]
vision <- read_xlsx('text.xlsx', sheet = 'Vision')
vision <- melt(vision,id.vars = c('Q1: Affiliation','Category','Q7: Vision relevant',
'Q11: Vision'))
vision <- vision[complete.cases(vision),]
temp_v <- vision %>% group_by(value) %>% summarise(n = n())
temp2_v <- reorder(temp$value, temp$n)
ui <- fluidPage(
plotlyOutput('chart2'),
dataTableOutput('table2')
)
server <- function(input, output,...){
output$chart2 <- renderPlotly({
plot_ly(temp_v,x=temp_v$n,y=temp2_v,type='bar') %>% layout(margin = list(l = 200, pad = 4), font=list(size=12))
})
output$table2 <- renderDataTable({
category <- event_data('plotly_click')$y
if (length(category) == 0){
vision[,c(4,6)]
} else {
vision[vision$value==category,c(4,6)]
}
})
}
shinyApp(ui, server)
library(reshape2)
library(readxl)
library(dplyr)
library(plotly)
library(shiny)
library(DT)
vision <- read_xlsx('text.xlsx', sheet = 'Vision')
vision <- melt(vision,id.vars = c('Q1: Affiliation','Category','Q7: Vision relevant',
'Q11: Vision'))
vision <- vision[complete.cases(vision),]
temp_v <- vision %>% group_by(value) %>% summarise(n = n())
temp2_v <- reorder(temp$value, temp$n)
ui <- fluidPage(
plotlyOutput('chart2'),
dataTableOutput('table2')
)
server <- function(input, output,...){
output$chart2 <- renderPlotly({
plot_ly(temp_v,x=temp_v$n,y=temp2_v,type='bar') %>% layout(margin = list(l = 200, pad = 4), font=list(size=12))
})
output$table2 <- renderDataTable({
category <- event_data('plotly_click')$y
if (length(category) == 0){
vision[,c(4,6)]
} else {
vision[vision$value==category,c(4,6)]
}
})
}
shinyApp(ui, server)
plot_ly(temp_v,x=temp_v$n,y=temp2_v,type='bar') %>% layout(margin = list(l = 200, pad = 4), font=list(size=12))
vision <- read_xlsx('text.xlsx', sheet = 'Vision')
vision <- melt(vision,id.vars = c('Q1: Affiliation','Category','Q7: Vision relevant',
'Q11: Vision'))
vision <- vision[complete.cases(vision),]
temp_v <- vision %>% group_by(value) %>% summarise(n = n())
View(temp_v)
temp2_v <- reorder(temp$value, temp$n)
temp2_v <- reorder(temp_v$value, temp_v$n)
library(reshape2)
library(readxl)
library(dplyr)
library(plotly)
library(shiny)
library(DT)
mission <- read_xlsx('text.xlsx', sheet = 'Mission')
mission <- melt(mission,id.vars = c('Q1: Affiliation','Category','Q4: Mission relevant',
'Q5: Mission'))
mission <- mission[complete.cases(mission),]
temp <- mission %>% group_by(value) %>% summarise(n = n())
temp2 <- reorder(temp$value, temp$n)
ui <- fluidPage(
plotlyOutput('chart'),
dataTableOutput('table')
)
server <- function(input, output,...){
output$chart <- renderPlotly({
plot_ly(temp,x=temp$n,y=temp2,type='bar') %>% layout(margin = list(l = 200, pad = 4), font=list(size=12))
})
output$table <- renderDataTable({
category <- event_data('plotly_click')$y
if (length(category) == 0){
mission[,c(4,6)]
} else {
mission[mission$value==category,c(4,6)]
}
})
}
shinyApp(ui, server)
library(reshape2)
library(readxl)
library(dplyr)
library(plotly)
library(shiny)
library(DT)
mission <- read_xlsx('text.xlsx', sheet = 'Mission')
mission <- melt(mission,id.vars = c('Q1: Affiliation','Category','Q4: Mission relevant',
'Q5: Mission'))
mission <- mission[complete.cases(mission),]
temp <- mission %>% group_by(value) %>% summarise(n = n())
temp2 <- reorder(temp$value, temp$n)
ui <- fluidPage(
plotlyOutput('chart'),
dataTableOutput('table')
)
server <- function(input, output,...){
output$chart <- renderPlotly({
plot_ly(temp,x=temp$n,y=temp2,type='bar') %>% layout(margin = list(l = 200, pad = 4), font=list(size=12))
})
output$table <- renderDataTable({
category <- event_data('plotly_click')$y
if (length(category) == 0){
mission[,c(4,6)]
} else {
mission[mission$value==category,c(4,6)]
}
})
}
shinyApp(ui, server)
vision <- read_xlsx('text.xlsx', sheet = 'Vision')
vision <- melt(vision,id.vars = c('Q1: Affiliation','Category','Q7: Vision relevant',
'Q11: Vision'))
vision <- vision[complete.cases(vision),]
temp_v <- vision %>% group_by(value) %>% summarise(n = n())
temp2_v <- reorder(temp_v$value, temp_v$n)
ui <- fluidPage(
plotlyOutput('chart2'),
dataTableOutput('table2')
)
server <- function(input, output,...){
output$chart2 <- renderPlotly({
plot_ly(temp_v,x=temp_v$n,y=temp2_v,type='bar') %>% layout(margin = list(l = 200, pad = 4), font=list(size=12))
})
output$table2 <- renderDataTable({
category <- event_data('plotly_click')$y
if (length(category) == 0){
vision[,c(4,6)]
} else {
vision[vision$value==category,c(4,6)]
}
})
}
shinyApp(ui, server)
values <- read_xlsx('text.xlsx', sheet = 'Values')
values <- melt(values,id.vars = c('Q1: Affiliation','Category','Q10: Relavant',
'Q8: Values'))
values <- values[complete.cases(values),]
temp_vl <- values %>% group_by(value) %>% summarise(n = n())
temp2_vl <- reorder(temp_vl$value, temp_vl$n)
ui <- fluidPage(
plotlyOutput('chart3'),
dataTableOutput('table3')
)
server <- function(input, output,...){
output$chart3 <- renderPlotly({
plot_ly(temp_vl,x=temp_vl$n,y=temp2_vl,type='bar') %>% layout(margin = list(l = 200, pad = 4), font=list(size=12))
})
output$table3 <- renderDataTable({
category <- event_data('plotly_click')$y
if (length(category) == 0){
values[,c(4,6)]
} else {
values[values$value==category,c(4,6)]
}
})
}
shinyApp(ui, server)
vision <- read_xlsx('text.xlsx', sheet = 'Vision')
library(reshape2)
library(readxl)
library(dplyr)
library(plotly)
library(shiny)
library(DT)
vision <- read_xlsx('text.xlsx', sheet = 'Vision')
vision <- melt(vision,id.vars = c('Q1: Affiliation','Category','Q7: Vision relevant',
'Q11: Vision'))
vision <- vision[complete.cases(vision),]
temp_v <- vision %>% group_by(value) %>% summarise(n = n())
temp2_v <- reorder(temp_v$value, temp_v$n)
ui <- fluidPage(
plotlyOutput('chart2'),
dataTableOutput('table2')
)
server <- function(input, output,...){
output$chart2 <- renderPlotly({
plot_ly(temp_v,x=temp_v$n,y=temp2_v,type='bar') %>% layout(margin = list(l = 200, pad = 4), font=list(size=12))
})
output$table2 <- renderDataTable({
category <- event_data('plotly_click')$y
if (length(category) == 0){
vision[,c(4,6)]
} else {
vision[vision$value==category,c(4,6)]
}
})
}
shinyApp(ui, server)
library(reshape2)
library(readxl)
library(dplyr)
library(plotly)
library(DT)
mission <- read_xlsx('text.xlsx', sheet = 'Mission')
mission <- melt(mission,id.vars = c('Q1: Affiliation','Category','Q4: Mission relevant',
'Q5: Mission'))
mission <- mission[complete.cases(mission),]
temp <- mission %>% group_by(value) %>% summarise(n = n())
temp2 <- reorder(temp$value, temp$n)
ui <- fluidPage(
plotlyOutput('chart'),
dataTableOutput('table')
)
library(reshape2)
library(readxl)
library(dplyr)
library(plotly)
library(DT)
library(shiny)
mission <- read_xlsx('text.xlsx', sheet = 'Mission')
mission <- melt(mission,id.vars = c('Q1: Affiliation','Category','Q4: Mission relevant',
'Q5: Mission'))
mission <- mission[complete.cases(mission),]
temp <- mission %>% group_by(value) %>% summarise(n = n())
temp2 <- reorder(temp$value, temp$n)
ui <- fluidPage(
plotlyOutput('chart'),
dataTableOutput('table')
)
server <- function(input, output,...){
output$chart <- renderPlotly({
plot_ly(temp,x=temp$n,y=temp2,type='bar') %>% layout(margin = list(l = 200, pad = 4), font=list(size=12))
})
output$table <- renderDataTable({
category <- event_data('plotly_click')$y
if (length(category) == 0){
mission[,c(4,6)]
} else {
mission[mission$value==category,c(4,6)]
}
})
}
shinyApp(ui, server)
vision <- read_xlsx('text.xlsx', sheet = 'Vision')
vision <- melt(vision,id.vars = c('Q1: Affiliation','Category','Q7: Vision relevant',
'Q11: Vision'))
vision <- vision[complete.cases(vision),]
temp_v <- vision %>% group_by(value) %>% summarise(n = n())
temp2_v <- reorder(temp_v$value, temp_v$n)
ui <- fluidPage(
plotlyOutput('chart2'),
dataTableOutput('table2')
)
server <- function(input, output,...){
output$chart2 <- renderPlotly({
plot_ly(temp_v,x=temp_v$n,y=temp2_v,type='bar') %>% layout(margin = list(l = 200, pad = 4), font=list(size=12))
})
output$table2 <- renderDataTable({
category <- event_data('plotly_click')$y
if (length(category) == 0){
vision[,c(4,6)]
} else {
vision[vision$value==category,c(4,6)]
}
})
}
shinyApp(ui, server)
install.packages(c("acs", "corrplot", "data.table", "opencpu", "RcppArmadillo", "rJava", "RWeka", "RWekajars", "sjstats", "spatstat", "spatstat.data", "sys", "tidyr", "tidyselect"))
library(reshape2)
library(readxl)
library(dplyr)
library(plotly)
library(DT)
library(shiny)
mission <- read_xlsx('text.xlsx', sheet = 'Mission')
mission <- melt(mission,id.vars = c('Q1: Affiliation','Category','Q4: Mission relevant',
'Q5: Mission'))
mission <- mission[complete.cases(mission),]
temp <- mission %>% group_by(value) %>% summarise(n = n())
temp2 <- reorder(temp$value, temp$n)
ui <- fluidPage(
plotlyOutput('chart'),
dataTableOutput('table')
)
server <- function(input, output,...){
output$chart <- renderPlotly({
plot_ly(temp,x=temp$n,y=temp2,type='bar') %>% layout(margin = list(l = 200, pad = 4), font=list(size=12))
})
output$table <- renderDataTable({
category <- event_data('plotly_click')$y
if (length(category) == 0){
mission[,c(4,6)]
} else {
mission[mission$value==category,c(4,6)]
}
})
}
shinyApp(ui, server)
library(reshape2)
library(readxl)
library(dplyr)
library(plotly)
library(DT)
library(shiny)
mission <- read_xlsx('text.xlsx', sheet = 'Mission')
mission <- melt(mission,id.vars = c('Q1: Affiliation','Category','Q4: Mission relevant',
'Q5: Mission'))
mission <- mission[complete.cases(mission),]
temp <- mission %>% group_by(value) %>% summarise(n = n())
temp2 <- reorder(temp$value, temp$n)
ui <- fluidPage(
plotlyOutput('chart'),
dataTableOutput('table')
)
server <- function(input, output,...){
output$chart <- renderPlotly({
plot_ly(temp,x=temp$n,y=temp2,type='bar') %>% layout(margin = list(l = 200, pad = 4), font=list(size=12))
})
output$table <- renderDataTable({
category <- event_data('plotly_click')$y
if (length(category) == 0){
mission[,c(4,6)]
} else {
mission[mission$value==category,c(4,6)]
}
})
}
shinyApp(ui, server)
library(reshape2)
library(readxl)
library(dplyr)
library(plotly)
library(DT)
library(shiny)
mission <- read_xlsx('text.xlsx', sheet = 'Mission')
mission <- melt(mission,id.vars = c('Q1: Affiliation','Category','Q4: Mission relevant',
'Q5: Mission'))
mission <- mission[complete.cases(mission),]
temp <- mission %>% group_by(value) %>% summarise(n = n())
temp2 <- reorder(temp$value, temp$n)
ui <- fluidPage(
plotlyOutput('chart'),
dataTableOutput('table')
)
server <- function(input, output,...){
output$chart <- renderPlotly({
plot_ly(temp,x=temp$n,y=temp2,type='bar') %>% layout(margin = list(l = 200, pad = 4), font=list(size=12))
})
output$table <- renderDataTable({
category <- event_data('plotly_click')$y
if(length(category) == 0){
#   mission[,c(4,6)]
NULL
} else {
datatable(mission[mission$value==category,c(4,6)])
}
})
}
shinyApp(ui, server)
mission <- read_xlsx('text.xlsx', sheet = 'Mission')
mission <- melt(mission,id.vars = c('Q1: Affiliation','Category','Q4: Mission relevant',
'Q5: Mission'))
View(mission)
mission <- mission[complete.cases(mission),]
View(mission)
mission <- read_xlsx('text.xlsx', sheet = 'Mission')
View(mission)
mission <- melt(mission,id.vars = c('Q1: Affiliation','Category','Q4: Mission relevant',
'Q5: Mission','Include))
mission <- mission[complete.cases(mission),]
temp <- mission %>% group_by(value) %>% summarise(n = n())
temp2 <- reorder(temp$value, temp$n)
ui <- fluidPage(
plotlyOutput('chart'),
mission <- read_xlsx('text.xlsx', sheet = 'Mission')
mission <- melt(mission,id.vars = c('Q1: Affiliation','Category','Q4: Mission relevant',
'Q5: Mission','Include'))
View(mission)
mission <- mission[complete.cases(mission),]
View(mission)
